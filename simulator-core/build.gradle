buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.+'
    }
}

plugins {
    id 'io.franzbecker.gradle-lombok'   version '2.0'
    id 'com.github.johnrengelman.shadow' version '5.1.0'
    id 'jacoco'
}

apply plugin: 'application'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'jacoco'
apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'

mainClassName = 'com.evbox.everon.ocpp.simulator.SimulatorLauncher'

run {
    if (project.hasProperty('arguments')) {
        args(arguments.split("\\s"))
    }
    standardInput = System.in
}

lombok {
    version = "1.18.4"
    sha256 = "39f3922deb679b1852af519eb227157ef2dd0a21eec3542c8ce1b45f2df39742"
}

dependencies {
    compile project(":payload:ocpp-data-types")
    compile project(":payload:ocpp20")

    compile 'info.picocli:picocli:3.9.2'
    compile 'com.squareup.okhttp3:okhttp:3.12.1'
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
    compile 'ch.qos.logback:logback-core:1.2.3'
    compile 'ch.qos.logback:logback-classic:1.2.3'

    compile 'org.apache.commons:commons-lang3:3.9'
    compile "com.google.guava:guava:${guavaVersion}"

    compile group: 'commons-codec', name: 'commons-codec', version: '1.12'

    testCompile 'org.assertj:assertj-core:3.13.0'
    testCompile 'io.undertow:undertow-core:2.0.17.Final'
    testCompile 'org.awaitility:awaitility:3.1.5'

    testCompile 'org.mockito:mockito-junit-jupiter:3.0.0'
    testCompile 'org.mockito:mockito-core:2.23.0'
    testCompile("org.junit.jupiter:junit-jupiter-api:${junit5Version}")
    testCompile("org.junit.jupiter:junit-jupiter-params:${junit5Version}")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junit5Version}")
    testRuntime("org.junit.vintage:junit-vintage-engine:${junit5Version}")
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.evbox.everon.ocpp.simulator.SimulatorLauncher'
        )
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}
version '0.3.8'

shadowJar {
    baseName = 'ocpp-station-simulator'
    classifier = null
    version = project.version
}

publishing {
    publications {
        StationSimulator(MavenPublication) { publication ->
            publication.artifact(sourcesJar)
            publication.artifact(javadocJar)
            publication.groupId('io.everon')
            publication.artifactId('ocpp-station-simulator')
            publication.version(project.version)
            project.shadow.component(publication)
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USERNAME')
    key = System.getenv('BINTRAY_API_KEY')
    publications = ['StationSimulator']

    pkg {
        repo = 'maven'
        name = 'ocpp-station-simulator'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/evbox/station-simulator.git'
        publicDownloadNumbers = true

        version {
            name = project.version
            desc = 'OCPP 2.0 Station Simulator'
            vcsTag = project.version
        }
    }

    publish = true
}